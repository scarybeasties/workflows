name: SB - iOS AppCenter Prod

on:
  workflow_dispatch: 
    inputs:
      development_build:
        description: 'Development Build'
        required: true
        type: boolean
        default: false

jobs:
  buildForiOS:
    name: Build iOS AppCenter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-iOS

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: iOS
          buildMethod: BuildSettings.CommandLineBuild
          customParameters: -platform iOS -development ${{ github.event.inputs.development_build }} -bundle_id com.scarybeasties.testapp -addressables_profile Default

      - uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

  releaseToAppCenter:
    name: Release to App Center
    runs-on: macos-latest
    needs: buildForiOS
    steps:
      - name: Setup Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.4.1'

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Checkout Certs
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.MATCH_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./certs

      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - uses: mikehardy/buildcache-action@v1

      - name: Fix File Permissions and Run fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          SB_CERTIFICATE_PASSWORD: ${{ secrets.SB_CERTIFICATE_PASSWORD }}

          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APPCENTER_OWNER: ${{ secrets.APPCENTER_OWNER }}

          BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          BUNDLE_ID: com.scarybeasties.testapp
          PROJECT_NAME: PowerHeroes # Change it to match your project's name

        run: |
          pwd
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          find $BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          bundle install
          bundle exec fastlane ios BuildAppCenter

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS