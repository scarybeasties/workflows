name: Node - Build Development

on:
  workflow_call: 
    inputs:
      include_iframe:
        description: 'Include iFrame'
        type: string
        default: "false"
      deployment_directory:
        description: 'Deployment Directory'
        type: string
        default: ""
      build_language:
        description: 'Build language'
        type: string
        default: "en"
      folder_to_deploy_from:
        description: 'Folder To Deploy From'
        type: string
        default: "dist-en"

jobs:
  build:
    name: Build Development
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key to chekout a private repo
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.NODE_AUDIO_SSH_KEY }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v9.0.0

      - name: Update Deployment Directory
        run: deployment_directory=${deployment_directory/${branch}/${{ steps.branch-name.outputs.current_branch }}}

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Update build.config.json
        run: echo "`jq '.includeIFrame=${{ inputs.include_iframe }}' build.config.json`" > build.config.json
        
      - name: Force a single language
        run: echo "`jq '.buildSingleLanguage="${{ inputs.build_language }}"' build.config.json`" > build.config.json

      - name: Get version code
        id: version_code
        uses: lucasfe/version_code_generator@3.9.4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Authenticate with private NPM package
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PAT }}" > ~/.npmrc

      - name: Setup NPM
        run: npm ci
      - run: npm rebuild && npm run prepare --if-present
      - run: npm run build:dev

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ftp.scarybserver.com
          username: github@scarybserver.com
          password: ${{ secrets.ftp_password }}
          local-dir: ${{ inputs.folder_to_deploy_from }}/
          server-dir: ${{ inputs.deployment_directory }}/${{ steps.version_code.outputs.code }}/

      - name: Notify Teams
        if: ${{ success() }}
        run: |
           cat << EOF > message.json
           {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Development build deployed!","themeColor":"00ff00","title":"$GITHUB_REPOSITORY development build deployed ðŸš€","sections":[{"facts":[{"name":"URL:","value":"http://www.scarybserver.com/clients/${{ inputs.deployment_directory }}/${{ steps.version_code.outputs.code }}"},{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
           EOF
           curl -X POST ${{ secrets.MSTEAMS_WEBHOOK }} --header 'Content-Type: application/json' -d @message.json