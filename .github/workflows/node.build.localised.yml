name: Build All Languages

on:
  workflow_call: 
    inputs:
      include_iframe:
        description: 'Include iFrame'
        type: string
        default: "false"
      deployment_directory:
        description: 'Deployment Directory'
        type: string
        default: ""

jobs:
  processLanguages:
    name: Process Languages
    runs-on: ubuntu-latest
    outputs:
        langs: ${{ steps.language.outputs.prop }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Language
        id: language
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'build.config.json'
          prop_path: 'buildLanguages'

      - run: echo ${{steps.language.outputs.prop}} 

  build:
    name: Build Multi Language
    runs-on: ubuntu-latest
    needs: processLanguages
    strategy:
      matrix:
        language: ${{ fromJson(needs.processLanguages.outputs.langs) }}

    steps:
      - name: Add SSH key to chekout a private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.GH_PAT }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update build.config.json
        run: echo "`jq '.includeIFrame=${{ inputs.include_iframe }}' build.config.json`" > build.config.json

      - name: Force lang
        run: echo "`jq '.buildLanguages=["${{ matrix.language }}"]' build.config.json`" > build.config.json

      - name: Get version code
        id: version_code
        uses: lucasfe/version_code_generator@v1.0.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          token: ${{ secrets.GH_PAT }}
          node-version: 16
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Setup NPM
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PAT }}
      - name: NPM Rebuild
        run: npm rebuild && npm run prepare --if-present

      - name: NPM run build:prod
        run: npm run build:prod

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ftp.scarybserver.com
          username: phil@scarybserver.com
          password: ${{ secrets.ftp_password }}
          local-dir: dist-${{ matrix.language }}/
          server-dir: ${{ inputs.deployment_directory }}/${{ matrix.language }}/

      - name: Zip Artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist-${{ matrix.language }}.zip dist-${{ matrix.language }}

      - name: Get dropbox token
        run: echo "DB_ACCES_TOKEN=$(curl https://api.dropbox.com/oauth2/token -d refresh_token=${{secrets.DROPBOX_REFRESH_TOKEN}} -d grant_type=refresh_token -d client_id=${{secrets.DROPBOX_CLIENT_ID}} -d client_secret=${{secrets.DROPBOX_CLIENT_SECRET}} | python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])")" >> $GITHUB_ENV

      - name: Archive to Dropbox
        uses: aTable/deploy-to-dropbox@v1.0.7
        with:
          GLOB: dist-${{ matrix.language }}.zip
          DROPBOX_ACCESS_TOKEN: ${{ env.DB_ACCES_TOKEN }}
          DROPBOX_DESTINATION_PATH_PREFIX: ${{ format('/AppBuilds/{0}/{1}/', github.event.repository.name, matrix.language ) }}
          DEBUG: true

  post-build:
    name: Post Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version code
        id: version_code
        uses: lucasfe/version_code_generator@v1.0.0

      - name: Get Language
        id: language
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'build.config.json'
          prop_path: 'buildLanguages'

      - run: |
          attachments='{"text": "",
              "attachments": [
                {
                  "title": "Multi Language Deployment Finished",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    },'

          buildLanguages=$(echo ${{steps.language.outputs.prop}} | sed -e 's/\[//g' -e 's/\]//g' -e 's/\"//g'  -e 's/,/ /g; q')

          arr=( $buildLanguages )
          echo $arr

          for i in "${arr[@]}"
          do
              # do stuff with $i
              attachments+='{
              "title": "Link to '"$i"' build",
              "short": false,
              "value": "https://scarybserver.com/${{ inputs.deployment_directory }}/'"$i"'"
            },'
          done

          attachments+=']
                }
              ]}'

          curl -X POST -H 'Content-type: application/json' --data  "$attachments" ${{ secrets.SLACK_WEBHOOK_URL }}


