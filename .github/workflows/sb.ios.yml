name: SB - iOS

on:
  workflow_call: 
    inputs:
      development_build:
        description: 'Development Build'
        type: string
        default: 'false'
      bundle_id:
        type: string
        description: 'Bundle ID to use'
        default: ""
      destination:
        type: string
        description: 'Destination of build'
        default: "AppCenter"

jobs:
  buildForiOS:
    name: Build iOS Project
    runs-on: ubuntu-latest
    steps:

      - uses: actions/cache@v2
        with:
          path: |
            .git
            Assets
            Library
            ProjectSettings
            Temp
          key: Library-iOS

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          clean: false

      - name: Get version code
        id: version_code
        uses: lucasfe/version_code_generator@v1.0.0

      - shell: bash
        run: |
          expr ${{ steps.version_code.outputs.code }} > buildNumber.txt

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          VERSION: none
        with:
          targetPlatform: iOS
          buildMethod: ScaryBeasties.BuildSettings.Builder.BuildSettings.CommandLineBuild
          versioning: Custom
          version: none
          customParameters: -platform iOS -development ${{ inputs.development_build }} -bundle_id ${{ inputs.bundle_id }} -project_name ${{ github.event.repository.name }} -addressables_profile Default -build_number ${{ steps.version_code.outputs.code }}

      - name: Clear cache to allow recaching
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.id == 'Library-iOS')
              {
                github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
              }
            }
            console.log("Clear completed")

      - uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - uses: actions/upload-artifact@v2
        with:
          name: buildNumber
          path: buildNumber.txt

  releaseToAppCenter:
    if: ${{ inputs.destination == 'AppCenter' }}
    name: Release to App Center
    runs-on: macos-latest
    needs: buildForiOS
    steps:
      - name: Setup Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.4.1'

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Checkout Certs
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.MATCH_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./certs

      - name: Checkout Fastlane
        uses: actions/checkout@v2
        with:
          repository: scarybeasties/Fastlane
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./fastlane

      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - name: Download buildNumber Artifact
        uses: actions/download-artifact@v2
        with:
          name: buildNumber
          path: buildNumber.txt

      - uses: mikehardy/buildcache-action@v1

      - name: Fix File Permissions and Run fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          SB_CERTIFICATE_PASSWORD: ${{ secrets.SB_CERTIFICATE_PASSWORD }}

          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APPCENTER_OWNER: ${{ secrets.APPCENTER_OWNER }}

          BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          BUNDLE_ID: ${{ inputs.bundle_id }}
          PROJECT_NAME: ${{ github.event.repository.name }}

        run: |
          pwd
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          find $BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          cd fastlane
          bundle install
          bundle exec fastlane ios BuildAppCenter

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS

      - name: Notify slack  
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "iOS AppCenter Build complete",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ env.BUILD_NUMBER }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}

  releaseToSBTestflight:
    if: ${{ inputs.destination == 'SB Testflight' }}
    name: Release to SB Testflight
    runs-on: macos-latest
    needs: buildForiOS
    steps:

      - name: Setup Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.4.1'

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Download buildNumber Artifact
        uses: actions/download-artifact@v2
        with:
          name: buildNumber
          path: buildNumber.txt

      - name: Notify slack  
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "iOS SB Testflight Build started",
                  "color": "ffa200",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout Certs
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.MATCH_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./certs

      - name: Checkout Fastlane
        uses: actions/checkout@v2
        with:
          repository: scarybeasties/Fastlane
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./fastlane

      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - uses: mikehardy/buildcache-action@v1

      - name: Run SB Fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          SB_CERTIFICATE_PASSWORD: ${{ secrets.SB_CERTIFICATE_PASSWORD }}

          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APPCENTER_OWNER: ${{ secrets.APPCENTER_OWNER }}

          BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          BUNDLE_ID: ${{ inputs.bundle_id }}
          PROJECT_NAME: ${{ github.event.repository.name }}

        run: |
          pwd
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          find $BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          cd fastlane
          bundle install
          bundle exec fastlane ios BuildSBTestFlight

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS

      - name: Notify slack  
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "iOS SB Testflight Build complete",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}

  releaseToEOneTestflight:
    if: ${{ inputs.destination == 'EOne Testflight' }}
    name: Release to EOne Testflight
    runs-on: macos-latest
    needs: buildForiOS
    steps:

      - name: Setup Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.4.1'

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Download buildNumber Artifact
        uses: actions/download-artifact@v2
        with:
          name: buildNumber
          path: buildNumber.txt

      - name: Notify slack  
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "iOS eOne Testflight Build started",
                  "color": "ffa200",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout Certs
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.MATCH_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./certs

      - name: Checkout Fastlane
        uses: actions/checkout@v2
        with:
          repository: scarybeasties/Fastlane
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ./fastlane

      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - uses: mikehardy/buildcache-action@v1

      - name: Run SB Fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          EONE_CERTIFICATE_PASSWORD: ${{ secrets.EONE_CERTIFICATE_PASSWORD }}

          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APPCENTER_OWNER: ${{ secrets.APPCENTER_OWNER }}

          BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          BUNDLE_ID: ${{ inputs.bundle_id }}
          PROJECT_NAME: ${{ github.event.repository.name }}

        run: |
          pwd
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          find $BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          cd fastlane
          bundle install
          bundle exec fastlane ios BuildEOneTestFlight

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS

      - name: Notify slack  
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "iOS eOne Testflight Build complete",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}