name: Node - Build Production

on:
  workflow_call: 
    inputs:
      include_iframe:
        description: 'Include iFrame'
        type: string
        default: "false"
      deployment_directory:
        description: 'Deployment Directory'
        type: string
        default: ""

jobs:
  build:
    name: Build Development
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key to chekout a private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.NODE_AUDIO_SSH_KEY }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Update build.config.json
        run: echo "`jq '.includeIFrame=${{ inputs.include_iframe }}' build.config.json`" > build.config.json

      - name: Force just EN build
        run: echo "`jq '.buildLanguages=["en"]' build.config.json`" > build.config.json

      - name: Get version code
        id: version_code
        uses: lucasfe/version_code_generator@v1.0.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          token: ${{ secrets.GH_PAT }}
          node-version: 16
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Setup NPM
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PAT }}
      - run: npm rebuild && npm run prepare --if-present
      - run: npm run build:prod

      - name: Zip Artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist-en.zip dist-en

      - name: Get dropbox token
        run: echo "DB_ACCES_TOKEN=$(curl https://api.dropbox.com/oauth2/token -d refresh_token=${{secrets.DROPBOX_REFRESH_TOKEN}} -d grant_type=refresh_token -d client_id=${{secrets.DROPBOX_CLIENT_ID}} -d client_secret=${{secrets.DROPBOX_CLIENT_SECRET}} | python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])")" >> $GITHUB_ENV

      - name: Archive to Dropbox
        run: |
            curl -X POST https://content.dropboxapi.com/2/files/upload \
              --header "Authorization: Bearer ${{ env.DB_ACCES_TOKEN }}" \
              --header "Dropbox-API-Arg: {\"autorename\":false,\"mode\":\"add\",\"mute\":false,\"path\":\"${{ format('/Clients/AppBuilds/{0}/{0}_{1}.zip', github.event.repository.name, steps.version_code.outputs.code) }}\",\"strict_conflict\":false}" \
              --header "Content-Type: application/octet-stream" \
              --header 'Dropbox-API-Path-Root: {".tag": "root", "root": "10680416816"}' \
              --header "Dropbox-API-Select-Admin: ${{ secrets.DB_ADMIN_ID }}" \
              --data-binary @"dist-en.zip"

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ftp.scarybserver.com
          username: phil@scarybserver.com
          password: ${{ secrets.ftp_password }}
          local-dir: dist-en/
          server-dir: ${{ inputs.deployment_directory }}/${{ steps.version_code.outputs.code }}/

      - name: Notify slack
        run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": "",
              "attachments": [
                {
                  "title": "Deployment finished",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Project",
                      "short": true,
                      "value": "${{ github.event.repository.name }} Build ${{ steps.version_code.outputs.code }}"
                    },
                    {
                      "title": "Link to build",
                      "short": false,
                      "value": "https://scarybserver.com/${{ inputs.deployment_directory }}/${{ steps.version_code.outputs.code }}"
                    }
                  ]
                }
              ]}' ${{ secrets.SLACK_WEBHOOK_URL }}
